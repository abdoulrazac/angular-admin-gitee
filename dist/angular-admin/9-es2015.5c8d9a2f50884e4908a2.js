(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"/Dcs":function(t,n){t.exports=".comment-search-form > .input-group > .form-control {\n  width: 16em;\n}\n\n.comment-list {\n  position: relative;\n}\n\n.comment-list .batch-checkbox {\n  text-align: left;\n  padding-left: 2em;\n}\n\n.comment-list .comment-err-msg {\n  margin: 1em 0;\n}\n\n.comment-list tbody tr.comment-item {\n  height: 13em;\n}\n\n.comment-list tbody tr td.comment-content {\n  line-height: 2;\n  word-break: break-word;\n}\n\n.comment-list tbody tr td.comment-user > .name,\n.comment-list tbody tr td.comment-user > .email,\n.comment-list tbody tr td.comment-user > .site {\n  max-width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}"},WgUq:function(t,n){t.exports='<div class="row">\n  <div class="col-md-12">\n    <sa-card title="\u8bc4\u8bba\u8be6\u60c5" baCardClass="with-scroll">\n      <form class="comment-form form-horizontal" [formGroup]="editForm" (ngSubmit)="submitComment()">\n        <div class="form-group row">\n          <label class="col-sm-1 form-control-label text-right">ID</label>\n          <div class="col-sm-2">\n            <div class="form-control">{{ comment.id }}</div>\n          </div>\n        </div>\n        <div class="form-group row">\n          <label class="col-sm-1 form-control-label text-right">\u6240\u5728\u6587\u7ae0</label>\n          <div class="col-sm-5">\n            <div class="form-control">\n              <span *ngIf="comment.post_id !== CommentPostType.Guestbook;else guestbookTitle">{{ article ? article.title : \'\u672a\u77e5\u6587\u7ae0\' }}</span>\n              <ng-template #guestbookTitle><span>\u7559\u8a00\u677f</span></ng-template>\n            </div>\n          </div>\n        </div>\n        <div  class="form-group row" [ngClass]="controlStateClass(likes)">\n          <label for="comment-likes" class="col-sm-1 form-control-label text-right">\u559c\u6b22\u4eba\u6570</label>\n          <div class="col-sm-2">\n            <input\n              type="number" \n              id="comment-likes" \n              class="form-control" \n              placeholder="\u559c\u6b22\u4eba\u6570" \n              [formControl]="likes"\n            />\n          </div>\n        </div>\n        <div  class="form-group row" [ngClass]="controlStateClass(is_top)">\n          <label for="comment-is-top" class="col-sm-1 form-control-label text-right">\u662f\u5426\u7f6e\u9876</label>\n          <div class="col-sm-2">\n            <select class="form-control c-select" id="comment-is-top" [formControl]="is_top">\n              <option [ngValue]="false">\u4e0d\u7f6e\u9876</option>\n              <option [ngValue]="true">\u7f6e\u9876</option>\n            </select>\n          </div>\n        </div>\n        <div  class="form-group row" [ngClass]="controlStateClass(state)">\n          <label for="comment-state" class="col-sm-1 form-control-label text-right">\u72b6\u6001</label>\n          <div class="col-sm-2">\n            <select class="form-control c-select" id="comment-state" [formControl]="state">\n              <option [ngValue]="CommentState.Spam">\u5783\u573e\u8bc4\u8bba</option>\n              <option [ngValue]="CommentState.Deleted">\u5df2\u5220\u9664</option>\n              <option [ngValue]="CommentState.Auditing">\u5f85\u5ba1\u6838</option>\n              <option [ngValue]="CommentState.Published">\u5ba1\u6838\u901a\u8fc7</option>\n            </select>\n          </div>\n        </div>\n        <div  class="form-group row" [ngClass]="controlStateClass(user_name)">\n          <label for="comment-user-name" class="col-sm-1 form-control-label text-right">\u7528\u6237\u540d</label>\n          <div class="col-sm-2">\n            <input\n              type="text" \n              id="comment-user-name" \n              class="form-control" \n              placeholder="\u7528\u6237\u540d" \n              [formControl]="user_name"\n            />\n          </div>\n        </div>\n        <div  class="form-group row" [ngClass]="controlStateClass(user_email)">\n          <label for="comment-user-email" class="col-sm-1 form-control-label text-right">\u7528\u6237\u90ae\u7bb1</label>\n          <div class="col-sm-2">\n            <input\n              type="email" \n              id="comment-user-email" \n              class="form-control" \n              placeholder="\u7528\u6237\u90ae\u7bb1" \n              [formControl]="user_email"\n            />\n          </div>\n        </div>\n        <div  class="form-group row" [ngClass]="controlStateClass(user_site)">\n          <label for="comment-user-site" class="col-sm-1 form-control-label text-right">\u7528\u6237\u5730\u5740</label>\n          <div class="col-sm-2">\n            <input\n              type="url" \n              id="comment-user-site" \n              class="form-control" \n              placeholder="\u7528\u6237\u7684\u4e2a\u4eba\u7f51\u5740" \n              [formControl]="user_site"\n            />\n          </div>\n        </div>\n        <div class="form-group row">\n          <label class="col-sm-1 form-control-label text-right">\u521b\u5efa\u65f6\u95f4</label>\n          <div class="col-sm-2">\n            <div class="form-control">{{ comment.create_at | dataToLocale }}</div>\n          </div>\n        </div>\n        <div class="form-group row">\n          <label class="col-sm-1 form-control-label text-right">\u5ba2\u6237\u7aef\u4fe1\u606f</label>\n          <div class="col-sm-5">\n            <div class="form-control">\n              <span *ngIf="comment.ip;else unknowIp">{{ comment.ip }}</span>\n              <ng-template #unknowIp>\n                <span class="text-muted">\u672a\u77e5ip</span>\n              </ng-template>\n            </div>\n            <br>\n            <div class="form-control">\n              <span *ngIf="comment.ip_location;else unknowIpLocation">{{ comment.ip_location.country }}{{ comment.ip_location.city }}</span>\n              <ng-template #unknowIpLocation>\n                <span class="text-muted">\u672a\u77e5\u7269\u7406\u5730\u5740</span>\n              </ng-template>\n            </div>\n            <br>\n            <div class="form-control">\n              <span>\u64cd\u4f5c\u7cfb\u7edf\uff1a</span>\n              <span *ngIf="comment.agent" [innerHTML]="osParser(comment.agent)"></span>\n              <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n              <span>\u6d4f\u89c8\u5668\uff1a</span>\n              <span *ngIf="comment.agent;else unknowUa" [innerHTML]="browserParser(comment.agent)"></span>\n              <ng-template #unknowUa>\n                <span class="text-muted">\u672a\u77e5\u8bbe\u5907</span>\n              </ng-template>\n            </div>\n          </div>\n        </div>\n        <div class="form-group row" [ngClass]="controlStateClass(pid)">\n          <label for="PID" class="col-sm-1 form-control-label text-right">\u7236\u7ea7\u8bc4\u8bba</label>\n          <div class="col-sm-5">\n            <select class="form-control c-select" [formControl]="pid">\n              <option default [value]="0">\u65e0\u7236\u7ea7\u8bc4\u8bba</option>\n              <ng-template [ngIf]="comment.id && comments && comments.data.length">\n                <option\n                  *ngFor="let item of comments.data" \n                  [ngValue]="item.id"\n                  [disabled]="item.id === comment.id"\n                >\n                  <span>ID\uff1a{{ item.id }}  -  {{ item.author.name }}\uff1a{{ item.content | truncate : 160 }}</span>\n                </option>\n              </ng-template>\n            </select>\n          </div>\n        </div>\n        <div  class="form-group row" [ngClass]="controlStateClass(content)">\n          <label for="comment-content" class="col-sm-1 form-control-label text-right">\u5185\u5bb9</label>\n          <div class="col-sm-5">\n            <sa-markdown-editor\n              class="form-control comemnt-content" \n              title="\u8bc4\u8bba\u5185\u5bb9"\n              id="comment-content"\n              [formControl]="content"\n            ></sa-markdown-editor>\n          </div>\n        </div>\n        <div  class="form-group row" [ngClass]="controlStateClass(extends)">\n          <label for="comment_extends" class="col-sm-1 form-control-label text-right">\u81ea\u5b9a\u4e49\u6269\u5c55</label>\n          <div class="col-sm-5">\n            <div class="comment-extend" *ngFor="let extend of extends.value; let i = index">\n              <div class="input-group">\n                <input\n                  type="text" \n                  id="comment-name"\n                  class="form-control"\n                  placeholder="key" \n                  [(ngModel)]="extend.name"\n                  [ngModelOptions]="{ standalone: true }"\n                />\n                <input\n                  type="text" \n                  id="comment-name"\n                  class="form-control"\n                  placeholder="value" \n                  [(ngModel)]="extend.value"\n                  [ngModelOptions]="{ standalone: true }"\n                />\n                <div class="input-group-append">\n                  <button class="btn btn-default" (click)="delExtendItem(i)">\n                    <i class="ion-md-trash"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <a [href]="" class="btn btn-default btn-sm btn-block" (click)="addExtendItem()">\u589e\u52a0\u6269\u5c55</a>\n            <span class="help-block sub-little-text">\u53ef\u4ee5\u4e3a\u5f53\u524d\u8bc4\u8bba\u6269\u5c55\u81ea\u5b9a\u4e49\u6269\u5c55\u5c5e\u6027</span>\n          </div>\n        </div>\n        <hr>\n        <div class="row">\n          <div class="col-sm-1"></div>\n          <div class="col-sm-11">\n            <button type="submit" class="btn btn-success" [disabled]="!editForm.valid">\u63d0\u4ea4\u66f4\u6539</button>\n            <span>&nbsp;&nbsp;</span>\n            <a [href]="" class="btn btn-info" (click)="getCommentDetail()">\u5237\u65b0\u8bc4\u8bba</a>\n            <span>&nbsp;&nbsp;</span>\n            <a\n              class="btn btn-default"\n              *ngIf="comment.post_id !== undefined && comment.post_id !== null"\n              [routerLink]="[\'/comment/post/\', comment.post_id]"\n            >\u56de\u5230\u5bbf\u4e3b\u9875\u9762\u8bc4\u8bba\u5217\u8868</a>\n          </div>\n        </div>\n      </form>\n    </sa-card>\n  </div>\n</div>\n'},fO6X:function(t,n,e){"use strict";e.r(n);var s=e("mrSG"),o=e("8Y7J"),a=e("SVse"),i=e("s7LF"),l=e("LqlI"),m=e("FE24"),c=e("6No5"),r=e("ZKRY"),d=e("iInd");let p=class{constructor(){}};p=s.b([Object(o.Component)({selector:"page-comment",template:"<router-outlet></router-outlet>"}),s.c("design:paramtypes",[])],p);var u=e("LvDl"),h=e("6p9a");function g(t,n){return t.match(new RegExp(n,"ig"))}function b(t,n,e){return`<span class="${t}"><i class="iconfont icon-${n}"></i>${e}</span>`}function f(t){const n=t=>t[0].split("/"),e=[{reg:/MSIE\s([^\s|]+)/gi,template:t=>b("ua_ie","ie","Internet Explorer | "+t[0].replace("MSIE","").split(".")[0])},{reg:/FireFox\/([^\s]+)/gi,template:t=>b("ua_firefox","firefox","Mozilla FireFox | "+n(t)[1])},{reg:/Maxthon([\d]*)\/([^\s]+)/gi,template:t=>b("ua_maxthon","maxthon","Maxthon")},{reg:/UBrowser([\d]*)\/([^\s]+)/gi,template:t=>b("ua_ucweb","uc","UCBrowser | "+n(t)[1])},{reg:/MetaSr/gi,template:t=>b("ua_sogou","internet","\u641c\u72d7\u6d4f\u89c8\u5668")},{reg:/2345Explorer/gi,template:t=>b("ua_2345explorer","internet","2345\u738b\u724c\u6d4f\u89c8\u5668")},{reg:/2345chrome/gi,template:t=>b("ua_2345chrome","internet","2345\u52a0\u901f\u6d4f\u89c8\u5668")},{reg:/LBBROWSER/gi,template:t=>b("ua_lbbrowser","internet","\u730e\u8c79\u5b89\u5168\u6d4f\u89c8\u5668")},{reg:/MicroMessenger\/([^\s]+)/gi,template:t=>b("ua_qq","wechat","\u5fae\u4fe1 | "+n(t)[1].split("/")[0])},{reg:/QQBrowser\/([^\s]+)/gi,template:t=>b("ua_qq","internet","QQ\u6d4f\u89c8\u5668 | "+n(t)[1].split("/")[0])},{reg:/QQ\/([^\s]+)/gi,template:t=>b("ua_qq","internet","QQ\u6d4f\u89c8\u5668 | "+n(t)[1].split("/")[0])},{reg:/MiuiBrowser\/([^\s]+)/gi,template:t=>b("ua_mi","internet","Miui\u6d4f\u89c8\u5668 | "+n(t)[1].split("/")[0])},{reg:/Chrome([\d]*)\/([^\s]+)/gi,template:t=>b("ua_chrome","chrome","Chrome | "+n(t)[1].split(".")[0])},{reg:/safari\/([^\s]+)/gi,template:t=>b("ua_apple","safari","Apple Safari | "+n(t)[1])},{reg:/Opera[\s|\/]([^\s]+)/gi,template:t=>b("ua_opera","opera","Opera | "+t[1])},{reg:/Trident\/7.0/gi,template:t=>b("ua_ie","edge","Internet Explorer 11")}].find(n=>{const e=t.match(n.reg);return!(!e||!e.length)});return e?e.template(t.match(e.reg)):(()=>b("ua_other","internet","\u5176\u5b83\u6d4f\u89c8\u5668"))()}function v(t){const n=[{key:"win",template:()=>(()=>g(t,"nt 5.1")?b("os_xp","windows","Windows XP"):g(t,"nt 6.1")?b("os_7","windows","Windows 7"):g(t,"nt 6.2")?b("os_8","windows","Windows 8"):g(t,"nt 6.3")?b("os_8_1","windows","Windows 8.1"):g(t,"nt 10.0")?b("os_8_1","windows","Windows 10"):g(t,"nt 6.0")?b("os_vista","windows","Windows Vista"):g(t,"nt 5")?b("os_2000","windows","Windows 2000"):b("os_windows","windows","Windows"))()},{key:"android",template:()=>b("os_android","android","Android")},{key:"ubuntu",template:()=>b("os_ubuntu","ubuntu","Ubuntu")},{key:"linux",template:()=>b("os_linux","linux","Linux")},{key:"iphone",template:()=>b("os_mac","mac","iPhone OS")},{key:"mac",template:()=>b("os_mac","mac","Mac OS X")},{key:"unix",template:()=>b("os_unix","unix","Unix")}].find(n=>{const e=g(t,n.key);return!(!e||!e.length)});return n?n.template():(()=>b("os_other","phone","Other"))()}var C,w,S,_,k=e("hIyk"),x=e("o0su"),I=e("JCLX"),y=e("Shlh");!function(t){t.All="all",t[t.Auditing=0]="Auditing",t[t.Published=1]="Published",t[t.Deleted=-1]="Deleted",t[t.Spam=-2]="Spam"}(C||(C={})),function(t){t[t.Guestbook=0]="Guestbook"}(w||(w={})),function(t){t[t.Self=0]="Self"}(S||(S={})),function(t){t[t.Get=0]="Get",t[t.PatchState=1]="PatchState"}(_||(_={}));const P={sort:I.d.Desc,state:C.All};let M=class{constructor(t,n,e){this.fb=t,this.route=n,this.httpService=e,this.Loading=_,this.SortType=I.d,this.CommentState=C,this.getArticlePath=k.a,this.getGuestbookPath=k.c,this.apiPath=h.g,this.osParser=v,this.browserParser=f,this.getParams=u.cloneDeep(P),this.post_id=null,this.comments={data:[],pagination:null},this.fetching={},this.todoDelCommentId=null,this.commentsSelectAll=!1,this.selectedComments=[],this.selectedPostIds=[],this.searchForm=this.fb.group({keyword:["",i.g.compose([i.g.required])]}),this.keyword=this.searchForm.controls.keyword}ngOnInit(){this.route.params.subscribe(({post_id:t})=>{this.post_id=t,this.getComments()})}get currentListTotal(){const t=this.comments.pagination;return t&&t.total||0}isGuestbook(t){return Number(t)===Number(w.Guestbook)}isState(t){return this.getParams.state===t}batchSelectChange(t){const n=this.comments.data,e=this.selectedComments;this.selectedComments=Object(y.b)({data:n,selectedIds:e,isSelect:t}),this.selectedPostIds=t?n.map(t=>t.post_id):[]}itemSelectChange(){const t=this.comments.data,n=this.selectedComments,e=Object(y.c)({data:t,selectedIds:n});this.commentsSelectAll=e.all,this.selectedComments=e.selectedIds,this.selectedPostIds=t.filter(t=>t.selected).map(t=>t.post_id)}delCommentModal(t){this.todoDelCommentId=t||null,this.delModal.show()}cancelCommentModal(){this.delModal.hide(),this.todoDelCommentId=null}switchState(t){void 0!==t&&t!==this.getParams.state&&(this.getParams.state=t,this.getComments())}searchComments(){this.searchForm.valid&&this.getComments()}resetGetParams(){this.searchForm.reset({keyword:""}),this.getParams.sort=I.d.Desc}refreshComments(){this.getComments({page:this.comments.pagination.current_page})}pageChanged(t){this.getComments({page:t.page})}getComments(t={}){this.keyword.value&&(t.keyword=this.keyword.value),Object.keys(this.getParams).forEach(n=>{"all"!==this.getParams[n]&&(t[n]=this.getParams[n])}),this.post_id&&(t.post_id=this.post_id),Object(y.d)(this.fetching,_.Get,this.httpService.get(this.apiPath,t).then(t=>{this.comments=t.result,this.commentsSelectAll=!1,this.selectedComments=[],this.selectedPostIds=[]}))}updateCommentsState(t,n){const e=n?[n._id]:this.selectedComments,s=(n?[n.post_id]:u.uniq(this.selectedPostIds)).filter(t=>t);Object(y.d)(this.fetching,_.PatchState,this.httpService.patch(this.apiPath,{comment_ids:e,post_ids:s,state:t}).then(()=>this.refreshComments()))}delComments(){const t=this.todoDelCommentId,n=this.comments.data.find(n=>t===n._id),e=this.todoDelCommentId?[this.todoDelCommentId]:u.uniq(this.selectedComments),s=(t&&n?[n.post_id]:u.uniq(this.selectedPostIds)).filter(t=>t);this.httpService.delete(this.apiPath,{comment_ids:e,post_ids:s}).then(t=>{this.todoDelCommentId=null,this.delModal.hide(),this.refreshComments()}).catch(t=>{this.delModal.hide()})}};M.ctorParameters=()=>[{type:i.a},{type:d.a},{type:x.b}],s.b([Object(o.ViewChild)("delModal",{static:!1}),s.c("design:type",l.a)],M.prototype,"delModal",void 0),M=s.b([Object(o.Component)({selector:"page-comment-list",encapsulation:o.ViewEncapsulation.None,template:e("p62O"),styles:[e("/Dcs")]}),s.c("design:paramtypes",[i.a,d.a,x.b])],M);const D={pid:S.Self,post_id:null,state:C.Published,is_top:!1,likes:0,agent:"",content:"",author:{name:"",email:"",site:""},extends:[]};var L;!function(t){t[t.GetDetail=0]="GetDetail",t[t.Update=1]="Update",t[t.GetList=2]="GetList",t[t.GetArticle=3]="GetArticle"}(L||(L={}));let O=class{constructor(t,n,e){this.fb=t,this.route=n,this.httpService=e,this.Loading=L,this.CommentState=C,this.CommentPostType=w,this.controlStateClass=y.a,this.apiPath=h.g,this.osParser=v,this.browserParser=f,this.comment_id=null,this.comments=null,this.article=null,this.comment=u.cloneDeep(D),this.fetching={},this.editForm=this.fb.group({pid:[D.pid,i.g.compose([i.g.required])],state:[D.state,i.g.compose([i.g.required])],is_top:[D.is_top,i.g.compose([i.g.required])],likes:[D.likes],content:[D.content,i.g.compose([i.g.required])],user_name:[D.author.name,i.g.compose([i.g.required])],user_email:[D.author.email,i.g.compose([i.g.required])],user_site:[D.author.site],extends:[D.extends]}),Object(y.e)(this,this.editForm)}updateEditForm(t){this.editForm.reset(Object.assign({},Object.assign({},t),{user_name:t.author.name,user_email:t.author.email,user_site:t.author.site,extends:t.extends.filter(t=>t&&t.name&&t.value)}))}addExtendItem(){this.extends.setValue([...this.extends.value,{}])}delExtendItem(t){this.extends.value.splice(t,1)}getCommentDetail(){Object(y.d)(this.fetching,L.GetDetail,this.httpService.get(`${this.apiPath}/${this.comment_id}`).then(t=>{this.comment=t.result,this.updateEditForm(this.comment),this.comment.post_id!==w.Guestbook&&this.getCommentArticleDetail(),this.getComments({post_id:this.comment.post_id,per_page:1e3})}))}submitComment(){if(!this.editForm.valid)return;const t=this.editForm.value,n=Object.assign({},this.comment,{pid:Number(t.pid),likes:Number(t.likes),state:Number(t.state),is_top:Boolean(t.is_top),author:{name:t.user_name,email:t.user_email,site:t.user_site},content:t.content,extends:t.extends.filter(t=>t&&t.name&&t.value)});Object(y.d)(this.fetching,L.Update,this.httpService.put(`${this.apiPath}/${n._id}`,n).then(t=>{this.comment=t.result}))}getComments(t){Object(y.d)(this.fetching,L.GetList,this.httpService.get(this.apiPath,t).then(t=>{this.comments=t.result}))}getCommentArticleDetail(){Object(y.d)(this.fetching,L.GetArticle,this.httpService.get(`/article/${this.comment.post_id}`).then(t=>{this.article=t.result}))}ngOnInit(){this.route.params.subscribe(({comment_id:t})=>{t&&(this.comment_id=t),this.getCommentDetail()})}};O.ctorParameters=()=>[{type:i.a},{type:d.a},{type:x.b}];const T=[{path:"",component:p,children:[{path:"",redirectTo:"list",pathMatch:"full"},{path:"list",component:M},{path:"post",redirectTo:"post/0",pathMatch:"full"},{path:"post/:post_id",component:M},{path:"detail/:comment_id",component:O=s.b([Object(o.Component)({selector:"page-comment-detail",encapsulation:o.ViewEncapsulation.None,template:e("WgUq"),styles:[e("gmiu")]}),s.c("design:paramtypes",[i.a,d.a,x.b])],O)}]}],A=d.d.forChild(T);let G=class{};G=s.b([Object(o.NgModule)({imports:[a.CommonModule,i.c,i.f,c.a.forRoot(),m.a.forRoot(),l.b.forRoot(),r.a,A],providers:[],declarations:[p,M,O]})],G);n.default=G},gmiu:function(t,n){t.exports=".comment-form .form-control.comemnt-content {\n  padding: 0;\n}\n.comment-form .comment-extend {\n  overflow: hidden;\n  margin-bottom: 1rem;\n}"},p62O:function(t,n){t.exports='<div class="row">\n  <div class="col-lg-12 col-md-12">\n    <sa-card title="\u8bc4\u8bba\u5217\u8868" baCardClass="with-scroll table-panel">\n      <div class="contnet-top-tools">\n        <div class="pull-left">\n          <div class="btn-group">\n            <button class="btn btn-success" *ngIf="isGuestbook(post_id);else postListTitle">\n              <strong>\u7559\u8a00\u677f\u8bc4\u8bba\u5217\u8868</strong>\n            </button>\n            <ng-template #postListTitle>\n              <button class="btn btn-info">\n                <strong>{{ post_id ? (\'\u6587\u7ae0 \' + post_id + \' \') : \'\u5168\u90e8\' }}\u8bc4\u8bba\u5217\u8868</strong>\n              </button>\n            </ng-template>\n            <button\n              type="button"\n              class="btn btn-default active"\n              [ngClass]="{ \'active\': isState(CommentState.All)}"\n              (click)="switchState(CommentState.All)"\n            >\n              <span>\u5168\u90e8</span>\n              <span *ngIf="isState(CommentState.All)">&nbsp;({{ currentListTotal }})</span>\n            </button>\n            <button\n              type="button"\n              class="btn btn-default"\n              [ngClass]="{ \'active\': isState(CommentState.Published) }"\n              (click)="switchState(CommentState.Published)"\n            >\n              <span>\u5df2\u53d1\u5e03</span>\n              <span *ngIf="isState(CommentState.Published)">&nbsp;({{ currentListTotal }})</span>\n            </button>\n            <button\n              type="button"\n              class="btn btn-default"\n              [ngClass]="{ \'active\': isState(CommentState.Auditing) }"\n              (click)="switchState(CommentState.Auditing)"\n            >\n              <span>\u5f85\u5ba1\u6838</span>\n              <span *ngIf="isState(CommentState.Auditing)">&nbsp;({{ currentListTotal }})</span>\n            </button>\n            <button\n              type="button"\n              class="btn btn-default"\n              [ngClass]="{ \'active\': isState(CommentState.Deleted) }"\n              (click)="switchState(CommentState.Deleted)"\n            >\n              <span>\u56de\u6536\u7ad9</span>\n              <span *ngIf="isState(CommentState.Deleted)">&nbsp;({{ currentListTotal }})</span>\n            </button>\n            <button\n              type="button"\n              class="btn btn-default"\n              [ngClass]="{ \'active\': isState(CommentState.Spam) }"\n              (click)="switchState(CommentState.Spam)"\n            >\n              <span>\u5783\u573e\u8bc4\u8bba</span>\n              <span *ngIf="isState(CommentState.Spam)">&nbsp;({{ currentListTotal }})</span>\n            </button>\n          </div>\n          <span>&nbsp;&nbsp;</span>\n          <div class="btn-group">\n            <button\n              type="button" \n              class="btn btn-default btn-with-icon"\n              (click)="refreshComments()"\n            >\n              <i class="ion-md-refresh"></i>\n              <span>\u5237\u65b0</span>\n            </button>\n            <button\n              type="button" \n              class="btn btn-default btn-with-icon"\n              (click)="resetGetParams()"\n            >\n              <i class="ion-md-remove-circle-outline"></i>\n              <span>\u91cd\u7f6e\u53c2\u6570</span>\n            </button>\n            <div class="btn-group" dropdown [isDisabled]="!selectedComments.length">\n              <button\n                type="button" \n                class="btn btn-default btn-with-icon dropdown-toggle"\n                dropdownToggle\n              >\n                <i class="ion-md-list"></i>\n                <span>\u6279\u91cf\u64cd\u4f5c</span>\n              </button>\n              <ul class="dropdown-menu" *dropdownMenu>\n                <li class="dropdown-item">\n                  <a [href]="" (click)="updateCommentsState(CommentState.Published)">\n                    <i class="ion-md-checkmark icon"></i>\n                    <span>\u5ba1\u6838\u901a\u8fc7</span>\n                  </a>\n                </li>\n                <li class="dropdown-item">\n                  <a [href]="" (click)="updateCommentsState(CommentState.Auditing)">\n                    <i class="ion-md-undo icon"></i>\n                    <span>\u79fb\u81f3\u5f85\u5ba1\u6838</span>\n                  </a>\n                </li>\n                <li class="dropdown-item">\n                  <a [href]="" (click)="updateCommentsState(CommentState.Deleted)">\n                    <i class="ion-md-pint icon"></i>\n                    <span>\u79fb\u81f3\u56de\u6536\u7ad9</span>\n                  </a>\n                </li>\n                <li class="dropdown-item">\n                  <a [href]="" (click)="updateCommentsState(CommentState.Spam)">\n                    <i class="ion-md-nuclear icon"></i>\n                    <span>\u6807\u4e3a\u5783\u573e\u8bc4\u8bba</span>\n                  </a>\n                </li>\n                <li class="dropdown-item">\n                  <a [href]="" (click)="delCommentModal()">\n                    <i class="ion-md-trash icon"></i>\n                    <span>\u5f7b\u5e95\u5220\u9664</span>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <form\n          class="pull-right form-inline comment-search-form"\n          [formGroup]="searchForm" \n          (ngSubmit)="searchComments()"\n        >\n          <div class="input-group">\n            <input\n              type="text"\n              [formControl]="keyword" \n              class="form-control with-default-addon" \n              placeholder="\u8bc4\u8bba\u5185\u5bb9\u3001\u4f5c\u8005\u4fe1\u606f"\n            />\n            <span class="input-group-append">\n              <button class="btn btn-default" type="submit" [disabled]="!searchForm.valid">\u641c\u7d22</button>\n            </span>\n          </div>\n        </form>\n        <span class="pull-right">&nbsp;&nbsp;&nbsp;</span>\n        <div class="pull-right form-inline">\n          <select class="form-control c-select" [(ngModel)]="getParams.sort" (ngModelChange)="getComments()">\n            <option [ngValue]="SortType.Desc" default>\u6700\u65b0</option>\n            <option [ngValue]="SortType.Asc">\u6700\u65e9</option>\n            <option [ngValue]="SortType.Hot">\u6700\u70ed\u95e8</option>\n          </select>\n        </div>\n      </div>\n      <div class="table-responsive">\n        <div class="comment-list">\n          <sa-loading-spider [show]="fetching[Loading.Get]"></sa-loading-spider>\n          <table class="table tablehover table-striped table-no-borders black-muted-bg table-enrich">\n            <thead class="thead-inverse">\n              <tr>\n                <th>\n                  <sa-checkbox [(ngModel)]="commentsSelectAll" (ngModelChange)="batchSelectChange($event)">\n                    <span sa-checkbox-label>\n                      <span>&nbsp;</span>\n                      <strong>ID</strong>\n                    </span>\n                  </sa-checkbox>\n                </th>\n                <th>PID</th>\n                <th>POST_ID</th>\n                <th width="23%">\u8bc4\u8bba\u5185\u5bb9</th>\n                <th>\u4e2a\u4eba\u4fe1\u606f</th>\n                <th>\u7ec8\u7aef</th>\n                <th>\u70b9\u8d5e</th>\n                <th>\u7f6e\u9876</th>\n                <th>\u65e5\u671f</th>\n                <th>\u72b6\u6001</th>\n                <th>\u64cd\u4f5c</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngIf="!comments.data.length;else dataList">\n                <td colspan="11">\n                  <p class="text-muted text-center comment-err-msg" *ngIf="!comments.data.length">\n                    <span>{{ fetching[Loading.Get] ? \'\u6570\u636e\u8bf7\u6c42\u4e2d...\' : \'\u6682\u65e0\u6570\u636e\' }}</span>\n                  <p>\n                </td>\n              </tr>\n              <ng-template #dataList>\n                <tr *ngFor="let comment of comments.data" class="comment-item">\n                  <td class="batch-checkbox">\n                    <sa-checkbox [(ngModel)]="comment.selected" (ngModelChange)="itemSelectChange()">\n                      <span sa-checkbox-label>\n                        <span>&nbsp;</span>\n                        <strong>{{ comment.id }}</strong>\n                      </span>\n                    </sa-checkbox>\n                  </td>\n                  <td>\n                    <a *ngIf="comment.pid;else noLinkPid" [routerLink]="[\'/comment/detail/\', comment.pid]">{{ comment.pid }}</a>\n                    <ng-template #noLinkPid><span>{{ comment.pid }}</span></ng-template>\n                  </td>\n                  <td>\n                    <a [routerLink]="[\'/comment/post/\', comment.post_id]">{{ comment.post_id }}</a>\n                  </td>\n                  <td class="comment-content">\n                    <span class="content">\n                      <span *ngIf="comment.content;else emptyComment">{{ comment.content | truncate : 160 }}</span>\n                      <ng-template #emptyComment><span class="text-muted">\u6682\u65e0\u5185\u5bb9</span></ng-template>\n                    </span>\n                  </td>\n                  <td class="comment-user">\n                    <div class="name"><strong>\u540d\u5b57\uff1a</strong>{{ comment.author.name }}</div>\n                    <div class="email">\n                      <strong>\u90ae\u7bb1\uff1a</strong>\n                      <a [href]="\'mailto:\' + comment.author.email" target="_blank">{{ comment.author.email }}</a>\n                    </div>\n                    <div class="site">\n                      <strong>\u7f51\u5740\uff1a</strong>\n                      <a [href]="comment.author.site" target="_blank">{{ comment.author.site || \'\u65e0\' }}</a>\n                    </div>\n                  </td>\n                  <td class="comment-tag">\n                    <div>\n                      <strong>IP\uff1a</strong>\n                      <span *ngIf="comment.ip;else unknowip">{{ comment.ip }}</span>\n                      <ng-template #unknowip><span class="text-muted">\u672a\u77e5</span></ng-template>\n                    </div>\n                    <div>\n                      <strong>\u5730\u7406\u4f4d\u7f6e\uff1a</strong>\n                      <span *ngIf="comment.ip_location;else unknowIpLocation">{{ comment.ip_location.country + \' - \' + comment.ip_location.city }}</span>\n                      <ng-template #unknowIpLocation><span class="text-muted">\u672a\u77e5</span></ng-template>\n                    </div>\n                    <div>\n                      <strong>\u6d4f\u89c8\u5668\uff1a</strong>\n                      <span [innerHTML]="browserParser(comment.agent)"></span>\n                    </div>\n                    <div>\n                      <strong>\u7cfb\u7edf\uff1a</strong>\n                      <span [innerHTML]="osParser(comment.agent)"></span>\n                    </div>\n                  </td>\n                  <td>\n                    <span>{{ comment.likes }}</span>\n                  </td>\n                  <td>{{ comment.is_top ? \'\u662f\' : \'\u5426\' }}</td>\n                  <td>{{ comment.create_at | dataToLocale }}</td>\n                  <td>\n                    <i class="ion-md-checkmark text-success" *ngIf="comment.state === CommentState.Published"></i>\n                    <i class="ion-md-create text-warning" *ngIf="comment.state === CommentState.Auditing"></i>\n                    <i class="ion-md-trash text-danger" *ngIf="comment.state === CommentState.Deleted"></i>\n                    <i class="ion-md-nuclear text-danger" *ngIf="comment.state === CommentState.Spam"></i>\n                    <span>&nbsp;</span>\n                    <span [ngSwitch]="comment.state">\n                      <span *ngSwitchCase="CommentState.Auditing">\u5f85\u5ba1\u6838</span>\n                      <span *ngSwitchCase="CommentState.Published">\u5df2\u53d1\u5e03</span>\n                    </span>\n                    <span *ngIf="comment.state === CommentState.Deleted">\u5df2\u5220\u9664</span>\n                    <span *ngIf="comment.state === CommentState.Spam">\u5783\u573e\u8bc4\u8bba</span>\n                  </td>\n                  <td>\n                    <div class="button-wrapper">\n                      <a\n                        class="btn btn-primary btn-sm btn-with-icon"\n                        [routerLink]="[\'/comment/detail/\', comment.id]"\n                      >\n                        <i class="ion-md-create"></i>\n                        <span>\u8bc4\u8bba\u8be6\u60c5</span>\n                      </a>\n                    </div>\n                    <div class="button-wrapper" *ngIf="comment.state === CommentState.Auditing">\n                      <button\n                        class="btn btn-success btn-sm btn-with-icon"\n                        (click)="updateCommentsState(CommentState.Published, comment)"\n                      >\n                        <i class="ion-md-checkmark"></i>\n                        <span>\u5ba1\u6838\u901a\u8fc7</span>\n                      </button>\n                    </div>\n                    <div class="button-wrapper" *ngIf="comment.state === CommentState.Deleted || comment.state === CommentState.Spam">\n                      <button\n                        class="btn btn-warning btn-sm btn-with-icon"\n                        (click)="updateCommentsState(CommentState.Auditing, comment)"\n                      >\n                        <i class="ion-md-checkmark"></i>\n                        <span>\u6062\u590d\u8bc4\u8bba</span>\n                      </button>\n                    </div>\n                    <div class="button-wrapper" *ngIf="comment.state === CommentState.Published">\n                      <button\n                        class="btn btn-danger btn-sm btn-with-icon"\n                        (click)="updateCommentsState(CommentState.Spam, comment)"\n                      >\n                        <i class="ion-md-nuclear"></i>\n                        <span>\u6807\u4e3a\u5783\u573e</span>\n                      </button>\n                    </div>\n                    <div class="button-wrapper" *ngIf="comment.state !== CommentState.Deleted">\n                      <button\n                        class="btn btn-danger btn-sm btn-with-icon"\n                        (click)="updateCommentsState(CommentState.Deleted, comment)"\n                      >\n                        <i class="ion-md-pint"></i>\n                        <span>\u79fb\u56de\u6536\u7ad9</span>\n                      </button>\n                    </div>\n                    <div class="button-wrapper" *ngIf="comment.state === CommentState.Deleted">\n                      <button class="btn btn-danger btn-sm btn-with-icon" (click)="delCommentModal(comment._id)">\n                        <i class="ion-md-trash"></i>\n                        <span>\u5f7b\u5e95\u5220\u9664</span>\n                      </button>\n                    </div>\n                     <div class="button-wrapper">\n                      <a\n                        class="btn btn-info btn-sm btn-with-icon"\n                        target="_blank"\n                        [href]="isGuestbook(comment.post_id) ? getGuestbookPath() : getArticlePath(comment.post_id)"\n                      >\n                        <i class="ion-md-share-alt"></i>\n                        <span>\u5bbf\u4e3b\u9875\u9762</span>\n                      </a>\n                    </div>\n                  </td>\n                </tr>\n              </ng-template>\n            </tbody>\n          </table>\n           <br>\n          <div class="text-center" *ngIf="comments.pagination">\n            <pagination\n              class="pagination-xs"\n              firstText="\u9996\u9875"\n              lastText="\u672b\u9875"\n              nextText="\u4e0b\u4e00\u9875"\n              previousText="\u4e0a\u4e00\u9875"\n              pageBtnClass="btn-primary"\n              [totalItems]="comments.pagination.total"\n              [itemsPerPage]="comments.pagination.per_page"\n              [(ngModel)]="comments.pagination.current_page"\n              [maxSize]="7"\n              [boundaryLinks]="true"\n              [rotate]="false"\n              (pageChanged)="pageChanged($event)"\n            ></pagination>\n          </div>\n        </div>\n      </div>\n    </sa-card>\n    \x3c!-- \u5220\u9664\u786e\u8ba4\u5f39\u7a97 --\x3e\n    <div bsModal #delModal="bs-modal" class="modal fade" tabindex="-1" role="dialog">\n      <div class="modal-dialog">\n        <div class="modal-content">\n          <div class="modal-header">\n            <button class="close" aria-label="Close" (click)="cancelCommentModal()">\n              <span aria-hidden="true">&times;</span>\n            </button>\n            <h4 class="modal-title">\u786e\u8ba4\u64cd\u4f5c</h4>\n          </div>\n          <div class="modal-body">\n            <div class="message">\n              <span class="icon text-danger">\n                <i class="ion-md-information-circle-outline"></i>\n              </span>\n              <span>\u786e\u5b9a\u8981\u5220\u9664{{ todoDelCommentId ? \'\u8fd9\u7bc7\' : \'\u9009\u4e2d\' }}\u8bc4\u8bba\u5417\uff1f\u672c\u64cd\u4f5c\u4e0d\u53ef\u9006</span>\n            </div>\n          </div>\n          <div class="modal-footer">\n            <button class="btn btn-danger confirm-btn" (click)="delComments()">\u786e\u8ba4\u5220\u9664</button>\n            <span>&nbsp;</span>\n            <button class="btn btn-default confirm-btn" (click)="cancelCommentModal()">\u53d6\u6d88</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'}}]);